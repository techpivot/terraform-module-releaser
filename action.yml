name: Terraform Module Releaser
description: Automate versioning, releases, and documentation for Terraform modules in GitHub monorepos.
author: TechPivot
branding:
  icon: package
  color: purple

inputs:
  major-keywords:
    description: Keywords in commit messages that indicate a major release.
    required: true
    default: major change,breaking change
  minor-keywords:
    description: Keywords in commit messages that indicate a minor release.
    required: true
    default: feat,feature
  patch-keywords:
    description: >
      Keywords in commit messages that indicate a patch release. By default, everything will be a patch
      release if major or minor keywords are not found.
    required: true
    default: fix,chore,docs
  default-first-tag:
    description: Specifies the default tag version. (Should be in format v#.#.#)
    required: true
    default: v1.0.0
  terraform-docs-version:
    description: >
      Specifies the terraform-docs version used to generate documentation for the wiki.

      See: https://github.com/terraform-docs/terraform-docs/releases
    required: true
    default: v0.20.0
  delete-legacy-tags:
    description: >
      Specifies a boolean that determines whether tags from Terraform modules that have been deleted
      should be automatically removed. By default this is true as the purpose of the repository is to keep
      releases/tags clean. When removing a module, this will ensure the tags/releases are automatically
      cleaned.
    required: true
    default: "true"
  disable-wiki:
    description: >
      Whether to disable wiki generation for Terraform modules.
      By default, this is set to false. Set to true to prevent wiki documentation from being generated.
    required: true
    default: "false"
  wiki-sidebar-changelog-max:
    description: >
      An integer that specifies how many changelog entries are displayed in the sidebar per module.
      Adjust this value to control the visibility of changelog entries in the module sidebar.
    required: true
    default: "5"
  wiki-usage-template:
    description: A raw, multi-line string to override the default 'Usage' section in the generated wiki. If not provided, a default usage block will be generated.
    required: false
    default: |
      To use this module in your Terraform, refer to the below module example:

      ```hcl
      module "{{module_name_terraform}}" {
        source = "{{module_source}}?ref={{ref}}"{{ref_comment}}

        # See inputs below for additional required parameters
      }
      ```
  disable-branding:
    description: >
      Flag to control whether the small branding link should be disabled or not in the
      pull request (PR) comments. When branding is enabled, a link to the action's
      repository is added at the bottom of comments. Setting this flag to "true"
      will remove that link. Useful for cleaner PR comments in enterprise environments
      or where third-party branding is undesirable.
    required: true
    default: "false"
  module-path-ignore:
    description: >
      A comma-separated list of module paths to completely ignore during processing. Paths matching these patterns will
      not be considered for versioning, releases, or documentation generation. These patterns follow glob syntax and are 
      relative to the repository root. Use this to exclude example modules, test modules, or other paths that should not 
      be treated as releasable modules.

      This is a top-level filter: if a module matches any of these patterns, it is completely excluded from all release, versioning, and documentation logic. No releases will ever happen for a module that matches this filter.

      The minimatch syntax is used for pattern matching. Patterns are relative to the workspace directory (no leading
      slash).

      NOTE: To match both a directory and its contents, use separate patterns (e.g., "dir,dir/**").
    required: false
    default: ""
  module-change-exclude-patterns:
    description: >
      A comma-separated list of file patterns to exclude from triggering version changes in Terraform modules.
      These patterns follow glob syntax and are relative to each Terraform module directory, not the repository root.
      Files matching these patterns will be tracked in the module but changes to them won't trigger a new version.
      Uses matchBase: true for pattern matching, so patterns like "*.md" will match files in any subdirectory.

      This option allows you to release a module but control which files inside a matched Terraform module should not force a bump of the module version. For example, you may want to exclude documentation or test files from triggering a release, but still include them in the module asset bundle.

      WARNING: Avoid excluding '*.tf' files, as they are essential for module functionality and versioning.
    required: true
    default: ".gitignore,*.md,*.tftest.hcl,tests/**"
  module-asset-exclude-patterns:
    description: >
      A comma-separated list of file patterns to exclude when bundling a Terraform module for release assets.
      These patterns follow glob syntax and are relative to each Terraform module directory, not the repository root.
      Files matching these patterns will be excluded from the bundled release archives. Uses matchBase: true for 
      pattern matching, similar to module-change-exclude-patterns.

      These patterns only affect what's included in release assets and do not impact versioning decisions.
    required: true
    default: ".gitignore,*.md,*.tftest.hcl,tests/**"
  use-ssh-source-format:
    description: >
      If enabled, all links to source code in generated Wiki documentation will use SSH format instead of HTTPS format.
    required: true
    default: "false"
  github_token:
    description: >
      Required for retrieving pull request metadata, tags, releases, updating PR comments, wiki, and creating 
      tags/releases. Automatically injected for convenience; no need to provide a custom token unless you have 
      specific requirements.
    required: true
    default: ${{ github.token }}
  tag-directory-separator:
    description: >
      Character used to separate directory path components in Git tags. This separator is used to convert 
      module directory paths into tag names (e.g., 'modules/aws/s3-bucket' becomes 'modules-aws-s3-bucket-v1.0.0' 
      when using '-'). Must be a single character from: /, -, _, or .

      Examples with different separators:
      - "/" (default): modules/aws/s3-bucket/v1.0.0
      - "-": modules-aws-s3-bucket-v1.0.0  
      - "_": modules_aws_s3_bucket_v1.0.0
      - ".": modules.aws.s3.bucket.v1.0.0
    required: true
    default: /
  use-version-prefix:
    description: >
      Whether to include the 'v' prefix on version tags (e.g., v1.2.3 vs 1.2.3). When enabled, all new version 
      tags will include the 'v' prefix. For initial releases, this setting takes precedence over any 'v' prefix 
      specified in the default-first-tag - if use-version-prefix is false and default-first-tag contains 'v', 
      the 'v' will be automatically removed to ensure consistency.
    required: true
    default: "true"
  module-ref-mode:
    description: >
      Controls how Terraform module usage examples reference versions in generated documentation.
      Valid values: "tag" or "sha". When "tag" (default), examples use the tag name in the ref parameter
      (e.g., ?ref=aws/vpc-endpoint/v1.1.3). When "sha", examples use the commit SHA with the tag as a 
      comment (e.g., ?ref=abc123def456 # aws/vpc-endpoint/v1.1.3). This allows pinning to immutable 
      commit SHAs that cannot be deleted, useful with Renovate for handling module removal scenarios.
      Note: This only affects generated documentation; tag and release creation remains unchanged.
    required: true
    default: "tag"
  strip-terraform-provider-prefix:
    description: >
      Whether to strip the 'terraform-<provider>-' prefix from directory names when calculating module names.
      When enabled, a directory named 'terraform-aws-vpc' will have its module name calculated as 'vpc' instead 
      of 'terraform-aws-vpc'. Only affects directories that start with 'terraform-' and contain at least one 
      additional hyphen to identify the provider boundary.
    required: true
    default: "false"
  include-ancestor-directories:
    description: >
      Whether to include ancestor directory hierarchy in tag/release archives. When enabled, module content 
      is placed under its full directory path within the archive instead of at the root. For example, a module 
      at 'aws/baseline/terraform-tillo-metadata' will have its content under 'aws/baseline/terraform-tillo-metadata/' 
      in the archive rather than at the root level. This is useful for tools like Scalr that expect specific 
      directory structures.
    required: true
    default: "false"

outputs:
  changed-module-names:
    description: JSON array of module names that were changed in the current pull request
  changed-module-paths:
    description: JSON array of file system paths to the modules that were changed
  changed-modules-map:
    description: JSON object mapping module names to their change details including current tag, next tag, and release type
  all-module-names:
    description: JSON array of all module names found in the repository
  all-module-paths:
    description: JSON array of file system paths to all modules in the repository
  all-modules-map:
    description: JSON object mapping all module names to their details including path, latest tag, and latest tag version

runs:
  using: node20
  main: dist/index.js
